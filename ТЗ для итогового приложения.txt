Техническое задание (ТЗ) на разработку веб-приложения "Магазин товаров компании"

1. Тема проекта
Разработка веб-приложения для компании, позволяющего пользователям просматривать и заказывать продукцию через удобный интерфейс. Приложение должно поддерживать мобильные и десктопные версии, включать личный кабинет пользователя, избранные товары, заказы, корзину и чаты по заказам.

2. Цель проекта
Создание многофункциональной платформы для взаимодействия компании с клиентами, где пользователи могут просматривать ассортимент продукции, оформлять заказы, вести переписку с продавцом и управлять своими заказами.

3. Функциональные требования

3.1. Главная страница

----------------------------------------------------------------

Описание: Приветственная страница.
Функции:
Секция "Популярные товары".
Секция "Рекомендуемые товары".
3.2. Каталог товаров

Описание: Страница с категориями и товарами.
Функции:
Фильтрация по категориям, брендам, цене.
Поиск по товарам.
Сортировка товаров (по цене, популярности, новизне).
Пагинация.
3.3. Профиль пользователя (Личный кабинет)

Описание: Личный кабинет пользователя.
Функции:
Просмотр и редактирование персональных данных.
Просмотр истории заказов.
Управление настройками уведомлений.
3.4. Избранные товары

Описание: Список товаров, которые пользователь добавил в избранное.
Функции:
Добавление и удаление товаров из избранного.
Переход к подробной информации о товаре.
3.5. Заказы

Описание: Страница для просмотра активных и завершенных заказов.
Функции:
Просмотр статуса заказа.
Подробности заказа (товары, суммы, сроки доставки).
Отмена или возврат заказа.
3.6. Корзина

Описание: Страница корзины с товарами, добавленными для покупки.
Функции:
Просмотр товаров в корзине.
Изменение количества товаров.
Удаление товаров из корзины.
Оформление заказа.
3.7. Чаты по заказам

Описание: Система чатов для общения с поддержкой или продавцом по конкретным заказам.
Функции:
Отправка и получение сообщений в режиме реального времени.
Уведомления о новых сообщениях.
Просмотр истории переписки по каждому заказу.
4. Технические требования
4.1. Backend

Технологии:
Django, Django Rest Framework (DRF) для построения API.
Django Channels для реализации чатов в реальном времени.
Uvicorn как ASGI сервер.
Redis для кеширования и обработки сообщений в реальном времени.
PostgreSQL для хранения данных.
Docker для контейнеризации приложения.
Nginx для обратного проксирования и обслуживания статики.
Ngrok для локального тестирования вебхуков и чатов.
4.2. Frontend

Технологии:
React для построения пользовательского интерфейса.
TypeScript для строгой типизации.
Vite для быстрого сборщика проекта.
4.3. Тестирование

Unit-тесты:
Для backend: встроенные возможности Django и DRF.
Для frontend: использование тестовых фреймворков React (Jest, Testing Library).
Интеграционные тесты: проверка взаимодействия между компонентами.
5. Требования к интерфейсу
Дизайн: Разработать интерфейс, который будет адаптивным, с поддержкой мобильных и десктопных версий.
Figma: Интерфейс разработан в Figma. Ссылка на макеты Figma.
6. API
Описание API:
Документация с подробным описанием всех конечных точек.
Поддержка RESTful архитектуры.
Аутентификация с использованием токенов (JWT).
7. Интеграции
Подключение платежных систем.
Интеграция с сервисами доставки.
8. Развертывание
Серверное окружение: Docker для удобного развертывания и управления зависимостями.
CI/CD: Автоматизация сборки и развертывания с использованием GitHub Actions.
9. Контрольные вопросы
Описание устройства платформы.
Интеграция системы с внешними сервисами.
10. Выводы
В ходе проекта были реализованы все ключевые функции.
Требуются дополнительные исследования в области масштабирования чатов и кеширования данных.
11. Приложения
Скриншоты: Включите скриншоты ключевых страниц приложения.
Ссылка на репозиторий GitHub: Ссылка на репозиторий.